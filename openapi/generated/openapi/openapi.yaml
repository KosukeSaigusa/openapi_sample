openapi: 3.0.0
info:
  description: Openapiのサンプル
  title: API
  version: v1
servers:
- url: http://localhost:8085/
paths:
  /users:
    get:
      operationId: getUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/user'
                type: array
          description: return user information
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unauthorized'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/forbidden'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/not_found'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/internal_server_error'
          description: Internal Server Error
      summary: すべてのユーザーを取得する
      tags:
      - users
    post:
      operationId: addUser
      requestBody:
        content:
          application/json:
            example:
              name: 佐藤 二郎
              email: new@test.com
              example: qwertyudf123yuikassdc23
            schema:
              $ref: '#/components/schemas/user'
        description: ユーザー作成の引数
      responses:
        "201":
          description: CREATED
      summary: 新しいユーザーを追加する
      tags:
      - users
  /users/{id}:
    get:
      operationId: getUser
      parameters:
      - description: ユーザーのID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
          description: Ok
      summary: idに紐づくuserを取得する
      tags:
      - users
components:
  schemas:
    user:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        address: 東京都新宿区
        gender: man
        name: 山田 太郎
        familyCount: 1
        email: test@test.com
      properties:
        name:
          description: ユーザーのフルネーム
          example: 山田 太郎
          type: string
        email:
          description: ユーザーのメールアドレス
          example: test@test.com
          type: string
        gender:
          description: 性別
          enum:
          - man
          - woman
          example: man
          type: string
        address:
          description: 住所
          example: 東京都新宿区
          type: string
        familyCount:
          description: 自分を含む家族の人数
          example: 1
          maximum: 20
          minimum: 1
          type: integer
        createdAt:
          description: 作成日
          format: date-time
          type: string
      required:
      - createdAt
      - email
      - familyCount
      - gender
      - name
      - paymentPrice
      type: object
    unauthorized:
      properties:
        error:
          example: 認証されていません
          type: string
      required:
      - error
      type: object
    forbidden:
      properties:
        message:
          example: Forbidden
          type: string
      required:
      - message
      type: object
    not_found:
      properties:
        message:
          example: Not Found
          type: string
      required:
      - message
      type: object
    internal_server_error:
      properties:
        message:
          example: Internal Server Error
          type: string
      required:
      - message
      type: object
